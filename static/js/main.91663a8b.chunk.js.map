{"version":3,"sources":["components/top-bar/run-button/run-button.jsx","store/actions.js","store/reducers/algorithm-reducer.js","store/reducers/top-bar-reducer.js","store/reducers/root-reducer.js","store/store.js","algorithms/algorithm-util.js","algorithms/algorithm-playback.js","algorithms/bubble-sort.js","algorithms/merge-sort.js","algorithms/quick-sort.js","algorithms/insertion_sort.js","algorithms/heap_sort.js","components/top-bar/run-button/run-button-container.js","components/top-bar/randomize-button/randomize-button.jsx","components/top-bar/randomize-button/randomize-button-container.js","components/top-bar/sorting-select/sorting-select.jsx","components/top-bar/sorting-select/sorting-select-container.js","components/top-bar/array-size-select/array-size-select.jsx","components/top-bar/array-size-select/array-size-select-container.js","components/top-bar/top-bar.jsx","components/top-bar/top-bar-container.js","components/visualizer-body/visualizer-body.jsx","components/visualizer-body/visualizer-body-container.js","components/app.jsx","components/app-container.js","index.js"],"names":["RunButton","beginSort","props","selectedIndex","array","resumePlayback","length","pausePlayback","this","classes","running","inPlayback","Button","variant","className","runButtonDisabled","runButton","onClick","endIcon","React","Component","withStyles","theme","color","palette","primary","dark","secondary","main","circularProgress","marginLeft","spacing","setRunning","type","payload","setTrace","trace","setInPlayback","setArray","setCompared","compared","setToSwap","toSwap","setPivot","pivot","setSorted","sorted","initialState","algorithmReducer","state","action","arraySize","algorithmIndex","topBarReducer","rootReducer","combineReducers","settings","arrayState","store","createStore","composeWithDevTools","available_algorithms","array_sizes","sorting_animation_delays","createArray","dispatch","push","Math","floor","random","runPlayback","speed","idx","indexOf","mapArraySizeToSpeed","playback","setInterval","getState","clearInterval","playbackTrace","slice","nextAction","shift","bubbleSort","len","tempArray","i","j","temp","mergeSortHelper","startIdx","endIdx","updates","inPlaceObj","mid","inPlaceIndex","arr1","arr2","merged","shouldSetSorted","pass","concat","merge","mergeSort","quickSortHelper","part","partition","quickSort","insertionSort","key","heapify","index","largest","left","right","heapSort","connect","RandomizeButton","handleClickRandomize","randomizeArray","handleClickReset","reset","root","randomizeButtonDisabled","randomizeButton","disabled","startIcon","marginRight","paddingRight","SortingSelect","openMenu","event","setState","anchorEl","currentTarget","handleAlgorithmSelection","setAlgorithm","handleClose","selectedAlgorithm","Menu","id","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","open","Boolean","onClose","map","algo","MenuItem","ArraySizeSelect","handleArraySizeSelection","size","setSize","TopBar","AppBar","position","Typography","noWrap","title","Grid","container","grid","button","width","backgroundColor","light","paddingLeft","borderRadius","shape","VisualizerBody","getWidth","num","justify","alignItems","arrayBody","includes","arrayElementPartition","arrayElementToSwap","arrayElementCompared","arrayElementSorted","arrayElement","style","height","top","transform","padding","flex","display","flexDirection","justifyConent","warning","error","success","createMuiTheme","purple","green","App","ThemeProvider","appRoot","bodyRoot","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91663a8b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport ArrowForwardIosSharpIcon from '@material-ui/icons/ArrowForwardIosSharp';\r\nimport PauseSharpIcon from '@material-ui/icons/PauseSharp';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    runButton: {\r\n        color: theme.palette.primary.dark\r\n    },\r\n    runButtonDisabled: {\r\n        color: theme.palette.secondary.main\r\n    },\r\n    circularProgress: {\r\n        color: theme.palette.secondary.main,\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass RunButton extends React.Component {\r\n    beginSort = () => {\r\n        this.props.beginSort(this.props.selectedIndex, this.props.array);\r\n    }\r\n\r\n    resumePlayback = () => {\r\n        this.props.resumePlayback(this.props.array.length);\r\n    }\r\n\r\n    pausePlayback = () => {\r\n        this.props.pausePlayback();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            running,\r\n            inPlayback\r\n        } = this.props;\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={running ? classes.runButtonDisabled : classes.runButton}\r\n                    onClick={running ? \r\n                        this.pausePlayback :\r\n                            inPlayback ?\r\n                                this.resumePlayback : \r\n                                    this.beginSort\r\n                    }\r\n                    endIcon={running ?\r\n                        <PauseSharpIcon /> :\r\n                        <ArrowForwardIosSharpIcon />\r\n                    }>{running ?\r\n                        'Pause' :\r\n                            inPlayback ? \r\n                                'Resume' : 'Sort'\r\n                    }\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RunButton);","export const SET_ALGORITHM = \"SET_ALGORITHM\";\r\nexport const SET_ARRAY = \"SET_ARRAY\";\r\nexport const SET_COMPARED = \"SET_COMPARED\";\r\nexport const SET_TO_SWAP = \"SET_TO_SWAP\";\r\nexport const SET_RUNNING = \"SET_RUNNING\";\r\nexport const SET_SORTED = \"SET_SORTED\";\r\nexport const SET_PIVOT = \"SET_PIVOT\";\r\nexport const SET_ARRAY_SIZE = \"SET_ARRAY_SIZE\";\r\nexport const RESET_META_DATA = \"RESET_META_DATA\";\r\nexport const SET_TRACE = \"SET_TRACE\";\r\nexport const SET_IN_PLAYBACK = \"SET_IN_PLAYBACK\";\r\n\r\n/** Settings Actions */\r\nexport const setAlgorithm = algorithmIndex => ({\r\n    type: SET_ALGORITHM,\r\n    payload: {\r\n        algorithmIndex:  algorithmIndex \r\n    }\r\n});\r\n\r\nexport const setRunning = running => ({\r\n    type: SET_RUNNING,\r\n    payload: {\r\n        running: running\r\n    }\r\n});\r\n\r\nexport const setArraySize = size => ({\r\n    type: SET_ARRAY_SIZE,\r\n    payload: {\r\n        arraySize: size\r\n    }\r\n});\r\n\r\n/** Trace Playback Actions */\r\nexport const setTrace = trace => ({\r\n    type: SET_TRACE,\r\n    payload: {\r\n        trace: trace\r\n    }\r\n});\r\n\r\nexport const setInPlayback = (inPlayback) => ({\r\n    type: SET_IN_PLAYBACK,\r\n    payload: {\r\n        inPlayback: inPlayback\r\n    }\r\n})\r\n\r\n/** Sorting Actions */\r\nexport const resetMetaData = () => ({\r\n    type: RESET_META_DATA,\r\n    payload: {}\r\n});\r\n\r\nexport const setArray = array => ({\r\n    type: SET_ARRAY,\r\n    payload: {\r\n        array: array\r\n    }\r\n});\r\n\r\nexport const setCompared = compared => ({\r\n    type: SET_COMPARED,\r\n    payload: {\r\n        compared: compared\r\n    }\r\n});\r\n\r\nexport const setToSwap = toSwap => ({\r\n    type: SET_TO_SWAP,\r\n    payload: {\r\n        toSwap: toSwap\r\n    }\r\n});\r\n\r\nexport const setPivot = pivot => ({\r\n    type: SET_PIVOT,\r\n    payload: {\r\n        pivot: pivot\r\n    }\r\n})\r\n\r\nexport const setSorted = sorted => ({\r\n    type: SET_SORTED,\r\n    payload: {\r\n        sorted: sorted\r\n    }\r\n})","import { SET_COMPARED, SET_TO_SWAP, SET_ARRAY, SET_RUNNING, SET_SORTED, RESET_META_DATA, SET_PIVOT, SET_TRACE, SET_IN_PLAYBACK } from '../actions';\r\n\r\nconst initialState = {\r\n    running: false,\r\n    inPlayback: false,\r\n    pivot : [],\r\n    array: [],\r\n    compared: [],\r\n    toSwap: [],\r\n    sorted: [],\r\n    trace: []\r\n}\r\n\r\nconst algorithmReducer = (state = initialState, action) => {\r\n    if (!action.type) {\r\n        return state\r\n    }\r\n    switch (action.type) {\r\n        case SET_ARRAY:\r\n            const { array } = action.payload;\r\n            return {\r\n                ...state,\r\n                array: array\r\n            }\r\n        case SET_COMPARED:\r\n            const { compared } = action.payload;\r\n            return {\r\n                ...state,\r\n                compared: compared\r\n            }\r\n        case SET_TO_SWAP:\r\n            const { toSwap } = action.payload;\r\n            return {\r\n                ...state,\r\n                toSwap: toSwap\r\n            }\r\n        case SET_RUNNING:\r\n            const { running } = action.payload;\r\n            return {\r\n                ...state,\r\n                running: running\r\n            }\r\n        case SET_SORTED:\r\n            const { sorted } = action.payload;\r\n            return {\r\n                ...state,\r\n                sorted: sorted\r\n            }\r\n        case SET_PIVOT:\r\n            const { pivot } = action.payload;\r\n            return {\r\n                ...state,\r\n                pivot: pivot\r\n            }\r\n        case RESET_META_DATA:\r\n            return {\r\n                ...state,\r\n                compared: [],\r\n                toSwap: [],\r\n                sorted: [],\r\n                pivot: []\r\n            }\r\n        case SET_TRACE:\r\n            const { trace } = action.payload;\r\n            return {\r\n                ...state,\r\n                trace: trace\r\n            }\r\n        case SET_IN_PLAYBACK:\r\n            const { inPlayback } = action.payload;\r\n            return {\r\n                ...state,\r\n                inPlayback: inPlayback\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default algorithmReducer;","import { SET_ALGORITHM, SET_ARRAY_SIZE } from '../actions';\r\n\r\nconst initialState = {\r\n    arraySize: 10,\r\n    algorithmIndex: 0\r\n};\r\n\r\nconst topBarReducer = (state = initialState, action) => {\r\n    if(!state){\r\n        return state;\r\n    }\r\n    switch(action.type) {\r\n        case SET_ALGORITHM:\r\n            const { algorithmIndex } = action.payload;\r\n            return {\r\n                ...state,\r\n                algorithmIndex: algorithmIndex\r\n            }\r\n        case SET_ARRAY_SIZE:\r\n            const { arraySize } = action.payload;\r\n            return {\r\n                ...state,\r\n                arraySize: arraySize\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default topBarReducer;\r\n","import algorithmReducer from \"./algorithm-reducer\";\r\nimport topBarReducer from \"./top-bar-reducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({settings: topBarReducer, arrayState: algorithmReducer});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/root-reducer.js\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","import { \r\n    setArray,\r\n    resetMetaData } from '../store/actions';\r\n\r\nconst available_algorithms = [\r\n    'Bubble Sort',\r\n    'Merge Sort',\r\n    'Quick Sort',\r\n    'Insertion Sort',\r\n    'Heap Sort'\r\n]\r\n\r\nconst array_sizes = [5, 10, 25, 50, 75, 100, 150];\r\nconst sorting_animation_delays = [500, 250, 100, 50, 25, 0, 0];\r\n\r\nconst createArray = (arraySize, dispatch) => {\r\n    let array = [];\r\n    while (array.length < arraySize) {\r\n        array.push(Math.floor(Math.random() * 200) + 5);\r\n    }\r\n    dispatch(setArray(array));\r\n    dispatch(resetMetaData());\r\n};\r\n\r\n\r\nexport { available_algorithms };\r\nexport { array_sizes };\r\nexport { sorting_animation_delays };\r\nexport { createArray };\r\n","import store from '../store/store';\r\nimport { \r\n    setTrace, \r\n    setToSwap, \r\n    setCompared, \r\n    setRunning, \r\n    setInPlayback,\r\n    setPivot } from '../store/actions';\r\nimport { sorting_animation_delays, array_sizes } from './algorithm-util';\r\n\r\nconst mapArraySizeToSpeed = (arraySize) => {\r\n    const idx = array_sizes.indexOf(arraySize);\r\n    return sorting_animation_delays[idx === -1? 2 : idx];\r\n}\r\n\r\nconst runPlayback = (dispatch, arraySize) => {\r\n    const speed = mapArraySizeToSpeed(arraySize);\r\n    let playback = setInterval(() => {\r\n        if(!store.getState().arrayState.running\r\n            || store.getState().arrayState.trace.length === 0){\r\n                clearInterval(playback);\r\n            }\r\n        playbackTrace(dispatch);\r\n    }, speed)\r\n};\r\n\r\nconst playbackTrace = (dispatch) => {\r\n    let trace = store.getState().arrayState.trace.slice(0);\r\n    \r\n    // Peel off next action to dispatch\r\n    let nextAction = trace.shift();\r\n    if(nextAction){\r\n        dispatch(setTrace(trace.slice(0)));\r\n        dispatch(nextAction);\r\n    } else {\r\n        dispatch(setToSwap([]));\r\n        dispatch(setCompared([]));\r\n        dispatch(setPivot([]));\r\n        dispatch(setRunning(false));\r\n        dispatch(setInPlayback(false));\r\n    }\r\n    return;\r\n}\r\n\r\nexport { runPlayback };","import { setCompared, setToSwap, setArray, setSorted, setTrace } from '../store/actions';\r\nimport { runPlayback } from './algorithm-playback';\r\n\r\nconst bubbleSort = (array, dispatch) => {\r\n    const len = array.length;\r\n    // This is a trace of the algorithm\r\n    let trace = [];\r\n    let sorted = [];\r\n    let tempArray = array.slice(0);\r\n    for (let i = 0; i < len - 1; i++) {\r\n        for (let j = 0; j < len - i - 1; j++) {\r\n            trace.push(setCompared([j, j + 1]));\r\n            if (tempArray[j] > tempArray[j + 1]) {\r\n                trace.push(setToSwap([j, j + 1]));\r\n                let temp = tempArray[j];\r\n                tempArray[j] = tempArray[j + 1];\r\n                tempArray[j + 1] = temp;\r\n                trace.push(setArray(tempArray.slice(0)));\r\n                trace.push(setToSwap([]));\r\n            }\r\n        }\r\n        sorted.push(len-i-1);\r\n        trace.push(setSorted(sorted.slice()));\r\n    }\r\n    sorted.push(0);\r\n    trace.push(setSorted(sorted.slice()));\r\n    dispatch(setTrace(trace.slice(0)));\r\n    runPlayback(dispatch, array.length);\r\n    return array;\r\n}\r\n\r\nexport default bubbleSort;","import { setArray, setSorted, setTrace } from '../store/actions';\r\nimport { runPlayback } from './algorithm-playback';\r\n\r\nconst merge = (arr1, arr2, startIdx, endIdx, trace, inPlaceObj, sorted) => {\r\n    let merged = [];\r\n    let shouldSetSorted = arr1.length + arr2.length === inPlaceObj.array.length;\r\n    let pass = 0;\r\n    while (arr1.length && arr2.length) {\r\n        if (arr1[0] < arr2[0]) {\r\n            merged.push(arr1.shift());\r\n        } else {\r\n            merged.push(arr2.shift());\r\n            inPlaceObj.array = inPlaceObj.array.slice(0, startIdx)\r\n                .concat(merged).concat(arr1).concat(arr2)\r\n                .concat(inPlaceObj.array.slice(endIdx + 1));\r\n                trace.push(setArray(inPlaceObj.array.slice()));\r\n        }\r\n        if(shouldSetSorted){\r\n            sorted.push(pass);\r\n            trace.push(setSorted(sorted.slice(0)));\r\n        }\r\n        pass++;\r\n    }\r\n    if(shouldSetSorted){\r\n        while(pass <= inPlaceObj.array.length){\r\n            sorted.push(pass);\r\n            trace.push(setSorted(sorted.slice(0)));\r\n            pass++;\r\n        }\r\n    }\r\n    return merged.concat(arr1.slice().concat(arr2.slice()));\r\n}\r\n\r\nconst mergeSort = (array, dispatch) => {\r\n    let trace = [];\r\n    let sorted = [];\r\n    mergeSortHelper(array, 0, array.length - 1, dispatch, trace, { array: array.slice() }, sorted);\r\n    dispatch(setTrace(trace.slice(0)));\r\n    runPlayback(dispatch, array.length);\r\n}\r\n\r\n/**\r\n * Merge sort is NOT an in place sorting algorithm. \r\n * This implementation attempts to visualize the action of \r\n * merge sort on an array by applying intermediate steps of the sort to\r\n * the base array.\r\n * \r\n * Note: the inPlace array is nested within an object in order to maintain proper\r\n * references to it throughout the call stack\r\n * @param {} array \r\n * @param {} dispatch \r\n */\r\nconst mergeSortHelper = (array, startIdx, endIdx, dispatch, updates, inPlaceObj, sorted) => {\r\n    const len = array.length;\r\n    if (len <= 1) return array;\r\n    let mid = Math.floor(len / 2);\r\n    let inPlaceIndex = Math.floor((startIdx + endIdx + 1) / 2);\r\n    let left = mergeSortHelper(array.slice(0, mid), startIdx, inPlaceIndex - 1, dispatch, updates, inPlaceObj, sorted);\r\n    let right = mergeSortHelper(array.slice(mid), inPlaceIndex, endIdx, dispatch, updates, inPlaceObj, sorted);\r\n    return merge(left, right, startIdx, endIdx, updates, inPlaceObj, sorted);\r\n}\r\n\r\nexport default mergeSort\r\n\r\n\r\n","import { setArray, setPivot, setToSwap, setSorted, setTrace } from '../store/actions';\r\nimport { runPlayback } from './algorithm-playback';\r\n\r\nconst partition = (array, startIdx, endIdx, trace, sorted) => {\r\n    let i = startIdx - 1;\r\n    let j = endIdx + 1;\r\n    let pivot = startIdx;\r\n    trace.push(setPivot([pivot]));\r\n    while (true) {\r\n        i++;\r\n        while (array[i] < array[pivot]){\r\n            i++;\r\n        }\r\n        j--;\r\n        while (array[j] > array[pivot]){\r\n            j--;\r\n        }\r\n        if (i >= j) {\r\n            sorted.push(j);\r\n            trace.push(setSorted(sorted.slice(0)));\r\n            return j;\r\n        }\r\n        let temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        trace.push(setToSwap([i, j]));\r\n        trace.push(setArray(array.slice(0)));\r\n    }\r\n}\r\n\r\nconst quickSortHelper = (array, startIdx, endIdx, trace, sorted) => {\r\n    if (startIdx >= endIdx){\r\n        return;\r\n    }\r\n    let part = partition(array, startIdx, endIdx, trace, sorted);\r\n    quickSortHelper(array, startIdx, part, trace, sorted);\r\n    quickSortHelper(array, part + 1, endIdx, trace, sorted);\r\n}\r\n\r\nconst quickSort = (array, dispatch) => {\r\n    let trace = [];\r\n    let sorted = [];\r\n    let tempArray = array.slice(0);\r\n    quickSortHelper(tempArray, 0, tempArray.length - 1, trace, sorted);\r\n    sorted.push(array.length-1);\r\n    trace.push(setSorted(sorted.slice(0)));\r\n    dispatch(setTrace(trace.slice(0)));\r\n    runPlayback(dispatch, array.length);\r\n}\r\n\r\nexport default quickSort;","import { setArray, setCompared, setToSwap, setSorted, setTrace } from '../store/actions';\r\nimport { runPlayback } from './algorithm-playback';\r\n\r\n\r\nconst insertionSort = (array, dispatch) => {\r\n    let trace = [];\r\n    let sorted = [];\r\n    let tempArray = array.slice(0);\r\n    const len = tempArray.length;\r\n    for(let i = 1; i < len; i++){\r\n        let key = tempArray[i];\r\n        let j = i-1;\r\n        trace.push(setCompared([j, i]));\r\n        while(j >= 0 && tempArray[j] > key){\r\n            trace.push(setToSwap([j, j+1]))\r\n            tempArray[j+1] = tempArray[j];\r\n            j--;\r\n            trace.push(setArray(tempArray.slice(0)));\r\n            trace.push(setCompared([j, j+1]));\r\n        }\r\n        tempArray[j+1] = key;\r\n        trace.push(setArray(tempArray.slice(0)));\r\n        sorted.push(i-1);\r\n        trace.push(setSorted(sorted.slice(0)));\r\n    }\r\n    sorted.push(len-1);\r\n    trace.push(setSorted(sorted.slice(0)));\r\n    dispatch(setTrace(trace.slice(0)));\r\n    runPlayback(dispatch, array.length);\r\n    return tempArray;\r\n}\r\n\r\n\r\n\r\nexport default insertionSort;","import { runPlayback } from './algorithm-playback';\r\nimport { setArray, setSorted, setToSwap, setTrace } from '../store/actions';\r\n\r\n\r\nconst heapify = (array, len, index, sorted, trace) => {\r\n    let largest = index,\r\n        left = 2*index + 1,\r\n        right = 2*index + 2;\r\n\r\n    if (left < len && array[largest] < array[left]) {\r\n        largest = left;\r\n    }\r\n\r\n    if (right < len && array[largest] < array[right]) {\r\n        largest = right;\r\n    }\r\n\r\n    if (largest !== index) {\r\n        trace.push(setToSwap([index, largest]));\r\n        let temp = array[index];\r\n        array[index] = array[largest];\r\n        array[largest] = temp;\r\n        trace.push(setArray(array.slice(0)));\r\n        heapify(array, len, largest, sorted, trace);\r\n    }\r\n}\r\n\r\nconst heapSort = (arrayState, dispatch) => {\r\n    let array = arrayState.slice(0);\r\n    const len = array.length;\r\n    let sorted = [];\r\n    let trace = [];\r\n    // Build maxheap\r\n    for(let i = Math.floor(len/2) - 1; i >= 0; i--){\r\n        heapify(array, len, i, sorted, trace)\r\n    }\r\n    for(let i=len-1; i>0; i--){\r\n        trace.push(setToSwap([0, i]));\r\n        let temp = array[0];\r\n        array[0] = array[i];\r\n        array[i] = temp;\r\n        sorted.push(i);\r\n        trace.push(setArray(array.slice(0)));\r\n        trace.push(setSorted(sorted.slice(0)));\r\n        heapify(array, i, 0, sorted, trace);\r\n    }\r\n    sorted.push(0);\r\n    trace.push(setSorted(sorted.slice(0)));\r\n    dispatch(setTrace(trace.slice(0)));\r\n    runPlayback(dispatch, array.length);\r\n    return array;\r\n}\r\n\r\nexport default heapSort;","import { connect } from 'react-redux';\r\nimport RunButton from './run-button';\r\nimport { setRunning, resetMetaData, setInPlayback } from '../../../store/actions';\r\nimport  bubbleSort from '../../../algorithms/bubble-sort';\r\nimport mergeSort from '../../../algorithms/merge-sort';\r\nimport quickSort from '../../../algorithms/quick-sort';\r\nimport insertionSort from '../../../algorithms/insertion_sort';\r\nimport heapSort from '../../../algorithms/heap_sort';\r\nimport { runPlayback } from '../../../algorithms/algorithm-playback';\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        classes: state.classes,\r\n        selectedIndex: state.settings.algorithmIndex,\r\n        running: state.arrayState.running,\r\n        array: state.arrayState.array,\r\n        inPlayback: state.arrayState.inPlayback\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    beginSort: (algorithmIndex, array) => {\r\n        dispatch(resetMetaData());\r\n        // The reason to call this before we are truly in playback\r\n        // is to prevent superclickers from doing something\r\n        // we don't want :^)\r\n        dispatch(setInPlayback(true));\r\n        dispatch(setRunning(true));\r\n        switch(algorithmIndex){\r\n            case 0:\r\n                bubbleSort(array, dispatch);\r\n                return;\r\n            case 1:\r\n                mergeSort(array, dispatch);\r\n                return;\r\n            case 2:\r\n                quickSort(array, dispatch);\r\n                return;\r\n            case 3:\r\n                insertionSort(array, dispatch);\r\n                return;\r\n            case 4:\r\n                heapSort(array, dispatch);\r\n                return;\r\n            default:\r\n                return;\r\n        }\r\n    },\r\n    resumePlayback: (arraySize) => {\r\n        dispatch(setRunning(true));\r\n        runPlayback(dispatch, arraySize);\r\n        return;\r\n    },\r\n    pausePlayback: () => {\r\n        dispatch(setRunning(false));\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RunButton);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport LoopSharpIcon from '@material-ui/icons/LoopSharp';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    randomizeButton: {\r\n        paddingRight: '10px',\r\n    },\r\n    randomizeButtonDisabled: {\r\n        paddingRight: '10px',\r\n    },\r\n});\r\n\r\n\r\nclass RandomizeButton extends React.Component {\r\n    handleClickRandomize = () => {\r\n        this.props.randomizeArray(this.props.array.length);\r\n    }\r\n\r\n    handleClickReset = () => {\r\n        this.props.reset(this.props.array.length);\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            running,\r\n            inPlayback\r\n        } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    className={running? classes.randomizeButtonDisabled : classes.randomizeButton}\r\n                    disabled={running}\r\n                    onClick={inPlayback? \r\n                        this.handleClickReset :\r\n                        this.handleClickRandomize}\r\n                    startIcon={<LoopSharpIcon/>}\r\n                    >{inPlayback? 'Reset' : 'Randomize'}\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RandomizeButton);\r\n\r\n","import { connect } from 'react-redux';\r\nimport { createArray } from '../../../algorithms/algorithm-util';\r\nimport randomizeButton from './randomize-button';\r\nimport { resetMetaData, setInPlayback, setTrace, setRunning } from '../../../store/actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        classes: state.classes,\r\n        array: state.arrayState.array,\r\n        running: state.arrayState.running,\r\n        inPlayback: state.arrayState.inPlayback,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    randomizeArray: (length) => {\r\n        createArray(length, dispatch);\r\n    },\r\n    reset: length => {\r\n        dispatch(setTrace([]));\r\n        dispatch(setRunning(false));\r\n        dispatch(setInPlayback(false));\r\n        dispatch(resetMetaData());\r\n        createArray(length, dispatch);\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(randomizeButton);","import React from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Menu, MenuItem, Button } from \"@material-ui/core\";\r\nimport ArrowDropDownSharpIcon from '@material-ui/icons/ArrowDropDownSharp';\r\nimport { available_algorithms } from '../../../algorithms/algorithm-util';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass SortingSelect extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null\r\n        }\r\n    }\r\n    openMenu = (event) => {\r\n        this.setState({\r\n            anchorEl: event.currentTarget\r\n        });\r\n    }\r\n    handleAlgorithmSelection = (index) => {\r\n        this.props.setAlgorithm(index);\r\n        this.setState({\r\n            anchorEl: null\r\n        });\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        })\r\n    }\r\n    render() {\r\n        const {\r\n            classes,\r\n            selectedAlgorithm,\r\n            inPlayback\r\n        } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Button \r\n                    variant=\"outlined\"\r\n                    disabled={inPlayback} \r\n                    onClick={this.openMenu}\r\n                    endIcon={<ArrowDropDownSharpIcon />}>\r\n                    {selectedAlgorithm}\r\n                </Button>\r\n                <Menu\r\n                    id=\"algorithm-select-menu\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    getContentAnchorEl={null}\r\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\"}}\r\n                    transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    keepMounted\r\n                    open={Boolean(this.state.anchorEl)}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    {available_algorithms.map((algo, index) => (\r\n                        <MenuItem\r\n                            key={algo}\r\n                            onClick={() => this.handleAlgorithmSelection(index)}\r\n                        >{algo}</MenuItem>\r\n                    ))}\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SortingSelect);","import { available_algorithms } from '../../../algorithms/algorithm-util';\r\nimport { connect } from 'react-redux';\r\nimport SortingSelect from './sorting-select';\r\nimport { setAlgorithm } from '../../../store/actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        classes: state.classes,\r\n        selectedAlgorithm: available_algorithms[state.settings.algorithmIndex],\r\n        inPlayback: state.arrayState.inPlayback\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setAlgorithm: index => dispatch(setAlgorithm(index)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortingSelect);","import React from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Menu, MenuItem, Button } from \"@material-ui/core\";\r\nimport ArrowDropDownSharpIcon from '@material-ui/icons/ArrowDropDownSharp';\r\nimport { array_sizes } from '../../../algorithms/algorithm-util';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass ArraySizeSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null\r\n        }\r\n    }\r\n\r\n    openMenu = (event) => {\r\n        this.setState({\r\n            anchorEl: event.currentTarget\r\n        });\r\n    }\r\n    handleArraySizeSelection = (size) => {\r\n        this.props.setSize(size);\r\n        this.props.createArray(size);\r\n        this.setState({\r\n            anchorEl: null\r\n        });\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        })\r\n    }\r\n    render() {\r\n        const {\r\n            classes,\r\n            inPlayback,\r\n            arraySize\r\n        } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    disabled={inPlayback}\r\n                    onClick={this.openMenu}\r\n                    endIcon={<ArrowDropDownSharpIcon />}>\r\n                    {`Array size: ${arraySize}`}\r\n                </Button>\r\n                <Menu\r\n                    id=\"algorithm-select-menu\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    getContentAnchorEl={null}\r\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                    transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    keepMounted\r\n                    open={Boolean(this.state.anchorEl)}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    {array_sizes.map(size => (\r\n                        <MenuItem\r\n                            key={size}\r\n                            onClick={() => this.handleArraySizeSelection(size)}\r\n                        >{size}</MenuItem>\r\n                    ))}\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ArraySizeSelect);","import { connect } from 'react-redux';\r\nimport ArraySizeSelect from './array-size-select';\r\nimport { createArray } from '../../../algorithms/algorithm-util';\r\nimport { setArraySize } from '../../../store/actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        classes: state.classes,\r\n        inPlayback: state.arrayState.inPlayback,\r\n        arraySize: state.settings.arraySize\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setSize: (arraySize) => dispatch(setArraySize(arraySize)),\r\n    createArray: (arraySize) => createArray(arraySize, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArraySizeSelect);","import React from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ToolBar from '@material-ui/core/Toolbar';\r\nimport RunButton from './run-button/run-button-container';\r\nimport RandomizeButton from './randomize-button/randomize-button-container';\r\nimport { Typography } from \"@material-ui/core\";\r\nimport SortingSelect from \"./sorting-select/sorting-select-container\";\r\nimport ArraySizeSelect from \"./array-size-select/array-size-select-container\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.primary.light\r\n    },\r\n    grid: {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    title: {\r\n        width: '50%',\r\n        paddingRight: theme.spacing(4),\r\n        paddingLeft: theme.spacing(4)\r\n    },\r\n    button: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        paddingRight: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    }\r\n});\r\n\r\nclass TopBar extends React.Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar className={classes.root} position=\"static\">\r\n                    <ToolBar>\r\n                        <Typography variant=\"h3\"\r\n                            noWrap\r\n                            className={classes.title}> \r\n                            Sorting Visualizer\r\n                        </Typography>\r\n                        <Grid container className={classes.grid}>\r\n                            <SortingSelect className={classes.button}></SortingSelect>\r\n                            <ArraySizeSelect className={classes.button}></ArraySizeSelect>\r\n                            <RandomizeButton className={classes.button}></RandomizeButton>\r\n                            <RunButton className={classes.button}></RunButton>\r\n                        </Grid>\r\n                    </ToolBar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(TopBar);","import { connect } from \"react-redux\";\r\nimport TopBar from './top-bar';\r\n\r\nconst mapStateToProps = (state) => ({state});\r\n\r\nconst mapDispatchToProps = () => dispatch => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);","import React from 'react';\r\nimport { withStyles, Grid } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        transform: 'translateY(-50%)',\r\n        padding: theme.spacing(2),\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyConent: 'center'\r\n    },\r\n    arrayElement: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        marginLeft: '3px',\r\n    },\r\n    arrayElementCompared: {\r\n        backgroundColor: theme.palette.warning.light,\r\n        marginLeft: '3px',\r\n    },\r\n    arrayElementToSwap: {\r\n        backgroundColor: theme.palette.error.light,\r\n        marginLeft: '3px',\r\n    },\r\n    arrayElementSorted: {\r\n        backgroundColor: theme.palette.success.light,\r\n        marginLeft: '3px'\r\n    },\r\n    arrayElementPartition: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        marginLeft: '3px'\r\n    }\r\n})\r\n\r\nclass VisualizerBody extends React.Component {\r\n    getWidth = (num) => {\r\n        switch (num) {\r\n            case 5:\r\n                return 40;\r\n            case 10:\r\n                return 20;\r\n            case 25:\r\n                return 10;\r\n            case 50:\r\n                return 9;\r\n            case 75:\r\n                return 8;\r\n            case 100:\r\n                return 6;\r\n            case 150:\r\n                return 5;\r\n            default:\r\n                return 5;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            array,\r\n            compared,\r\n            toSwap,\r\n            sorted,\r\n            pivot,\r\n        } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Grid\r\n                    container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                    className={classes.arrayBody}>\r\n                    {array && array.length ? array.map((num, index) => {\r\n                        return (\r\n                            <div\r\n                                className={\r\n                                    pivot.includes(index) ? classes.arrayElementPartition :\r\n                                        toSwap.includes(index) ? classes.arrayElementToSwap :\r\n                                            compared.includes(index) ? classes.arrayElementCompared :\r\n                                                sorted.includes(index) ? classes.arrayElementSorted :\r\n                                                    classes.arrayElement}\r\n                                style={{\r\n                                    width: `${this.getWidth(array.length)}px`,\r\n                                    height: `${2 * num}px`\r\n                                }}\r\n                                key={index}></div>\r\n                        )\r\n                    }) : null}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(VisualizerBody)","import { available_algorithms } from '../../algorithms/algorithm-util';\r\nimport { connect } from 'react-redux';\r\nimport VisualizerBody from './visualizer-body';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        classes: state.classes,\r\n        selectedAlgorithm: available_algorithms[state.settings.algorithmIndex],\r\n        arraySize: state.settings.arraySize,\r\n        array: state.arrayState.array,\r\n        compared: state.arrayState.compared,\r\n        toSwap: state.arrayState.toSwap,\r\n        sorted: state.arrayState.sorted,\r\n        pivot: state.arrayState.pivot\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VisualizerBody);","import React, { Component } from \"react\";\r\nimport TopBar from \"./top-bar/top-bar-container\";\r\nimport VisualizerBody from \"./visualizer-body/visualizer-body-container\";\r\nimport { createMuiTheme, withStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: purple[500],\r\n        },\r\n        secondary: {\r\n            main: green[500],\r\n        },\r\n    },\r\n});\r\n\r\nconst styles = theme => ({\r\n    appRoot: {\r\n\r\n    },\r\n    bodyRoot: {\r\n\r\n    }\r\n})\r\n\r\nclass App extends Component {\r\n    // Create initial array\r\n    componentDidMount() {\r\n        this.props.createArray(this.props.settings.arraySize);\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={classes.appRoot}>\r\n                    <TopBar></TopBar>\r\n                    <div className={classes.bodyRoot}>\r\n                        <VisualizerBody></VisualizerBody>\r\n                    </div>\r\n                </div>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);","import { connect } from \"react-redux\";\r\nimport App from './app';\r\nimport { createArray } from \"../algorithms/algorithm-util\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return (state)\r\n};\r\nconst mapDispatchToProps = () => dispatch => ({\r\n    createArray: arraySize => createArray(arraySize, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/app-container.js';\r\nimport store from './store/store.js';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}